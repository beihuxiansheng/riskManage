<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:aop="http://www.springframework.org/schema/aop"
xmlns:tx="http://www.springframework.org/schema/tx"
xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd" >
    <!-- 1.配置jdbc文件 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
           <!--  <property name="locations" value="classpath:jdbc.properties"/> -->
        <property name="fileEncoding" value="GBK" />
        <property name="locations">
            <list>  
                <value>classpath:jdbc.properties</value>
                <value>classpath:config.properties</value>
                <value>classpath:env.properties</value>
            </list>  
        </property>

    </bean>

    <bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>classpath*:/env/${env}/*.properties</value>
            </list>
        </property>
    </bean>
    <bean id="loadKeyFromProperties" class="duomi.init.GlobalConfig">
        <property name="keyFileResources">
            <list>
                <value>classpath*:/env/${env}/*.properties</value>
            </list>
        </property>
    </bean>
    <!--<bean id="preferencesConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
        <property name="properties" ref="configProperties" />
    </bean>-->
    <!-- 2.扫描的包路径，这里不扫描被@Controller注解的类 --><!--使用<context:component-scan/> 可以不在配置<context:annotation-config/> -->
    <context:component-scan base-package="duomi.control">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
    <context:component-scan base-package="duomi.services.**,duomi.com.httpIvk.services" >
	</context:component-scan>
	
	<!-- mongodb dao -->
	 <context:component-scan base-package="duomi.mongodb.dao" >
	</context:component-scan>
    
    <!-- dozer 相关配置 begin -->
    <context:annotation-config/>
    <context:component-scan base-package="dozer.*"/>
    
		<!-- 此处的mapper配置文件是用来处理复杂类型的转换使用 -->
    <bean id="mapper" class="org.dozer.spring.DozerBeanMapperFactoryBean">
        <property name="mappingFiles" value="classpath*:/dozer/*-mapper.xml"/>  
    </bean>
    
    <!-- dozer 相关配置 end -->
    
    <import resource="classpath:spring-mybatis.xml" />
    
    <!--导入mongodb的配置文件-->  
    <import resource="classpath:mongodb-context.xml" />
    
</beans>